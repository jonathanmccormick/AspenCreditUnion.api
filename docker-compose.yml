version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: api/Dockerfile
    ports:
      - "5001:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=AuthDB;Username=${DB_USER};Password=${DB_PASSWORD};
      - JwtSettings__SecretKey=${JWT_SECRET_KEY}
      - ASPNETCORE_URLS=http://+:80
      - DOTNET_USE_POLLING_FILE_WATCHER=1
      - ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS=true
      - ASPNETCORE_LOGGING__CONSOLE__FORMATTEROPTIONSSECTIONNAME=SIMPLEFORMATTEROPTIONS
      - ASPNETCORE_LOGGING__CONSOLE__FORMATTERNAME=SIMPLE
      - ASPNETCORE_LOGGING__CONSOLE__LOGTOSTDERRONFAILEDSTDOUT=true
    volumes:
      - dp-keys:/root/.aspnet/DataProtection-Keys
    depends_on:
      postgres:
        condition: service_healthy
    restart: on-failure

  postgres:
    image: postgres:14
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=AuthDB
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d AuthDB"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: always

volumes:
  dp-keys:
  postgres-data: